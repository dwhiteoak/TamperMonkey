{"name":"Tampermonkey Scripts","tagline":"","body":"# Welcome to TamperMonkey Scripts for Newcastle University.\r\n### For use with the NUSERVICE - helps to create new incidents and Service Requests quickly and easily\r\n\r\n![Nuservice ](https://raw.githubusercontent.com/ibettison/CannedAnswersImages/master/NUService.PNG)\r\n\r\n## What is needed to use the scripts\r\n* Install the [TamperMonkey](https://tampermonkey.net/) extension in your Google Chrome Browser![Click to Fork ](https://raw.githubusercontent.com/ibettison/CannedAnswersImages/master/tamperMonkey.PNG)\r\n* Create a [GitHub Account](https://github.com/join)\r\n* Fork my [TamperMonkey](https://tampermonkey.net/) scripts into your GitHub account (see help (2) below)\r\n* Download [GitHub Desktop Application](https://desktop.github.com/) and install it on your desktop\r\n* Edit _HeaderDetails.user.js_ to reflect your own details (See help (5) below)\r\n* Download the forked copy of my [TamperMonkey](https://tampermonkey.net/) Scripts to the Desktop application (see help (3) below)\r\n* Now in [TamperMonkey](https://tampermonkey.net/) go to Dashboard/Utilities and import from the GitHub location on you Desktop\r\n* Type the following in the URL prompt **File://H:/GitHub/TamperMonkey/setUpButtons.user.js** (this is the default desktop app local folder location for GitHub repositories)\r\n* You now should have an option to install the script - go ahead and click the **Install button**\r\n* The last thing you need to do now is change the path to the Header Details file you edited earlier. Do this by selecting _Dashboard/Installed userscripts_ and click on the script that has now been installed. The script has header details at the top of it and you need to change the path to the following... ( see help (1) below)\r\n\r\n## 1. Change this path in the **setUpButtons** script\r\n// @require      https://raw.githubusercontent.com/ibettison/tamperMonkey/master/headerDetails.user.js\r\nto\r\n// @require      https://raw.githubusercontent.com/{yourGitHubId}/tamperMonkey/master/headerDetails.user.js\r\n\r\n## 2. Fork - I thought that was something to eat with\r\nA fork in GitHub terms is basically making a copy of a repository into your GitHub account. Click on the FORK button when you are in [my account (TamperMonkey)](https://github.com/ibettison/tamperMonkey) \r\n![Click to Fork ](https://raw.githubusercontent.com/ibettison/CannedAnswersImages/master/Fork.PNG)\r\n\r\nYou now have a copy of the TamperMonkey Scripts and should now download it to the GitHub desktop application. (see help below)\r\n\r\n## 3. How can I download the repository to my computer\r\nFirstly you have to have the [GitHub Desktop Application](https://desktop.github.com/) installed on your computer. GitHub knows that this has been installed and creates an icon inside your version of the TamperMonkey Scripts repository. Make sure you are viewing your TamperMonkey repository and click the download button.\r\n![Click to GitHub Desktop ](https://raw.githubusercontent.com/ibettison/CannedAnswersImages/master/Download.PNG)\r\nThis copies the repository contents to you computer and should copy it to the default location on your H: drive - H:\\GitHub\\TamperMonkey.\r\n\r\n## 4. How do I keep the script up to date\r\nOk! If I make any changes to the code and upload them to GitHub your script will automatically update without any need for you to do anything. Just check the **Script Update** settings in settings and make sure the check interval is NOT set to 'Never'.\r\n\r\n![Click to Fork ](https://raw.githubusercontent.com/ibettison/CannedAnswersImages/master/scriptUpdate.PNG)\r\n\r\n## 5. How do I change the Header Details\r\nYou need to go into [GitHub](https://github.com/) on the internet and select the file _headerDetails.user.js_, there is a **pencil icon** at the top of the viewing window that allows you to edit the file. \r\n![Click to Edit ](https://raw.githubusercontent.com/ibettison/CannedAnswersImages/master/Edit.PNG)\r\nTo save the file you need to type a description as to why the file was changed then you can click the _Commit Changes button_.\r\n\r\n\r\n## 6. I've made additional changes to the Header Details but they're not showing when I add a Canned Answer\r\nTamperMonkey Caches the external files it uses within the scripts and you need to change a setting in the Settings options to make TamperMonkey re-cache the external Header Details file. In Settings find the _**Externals**_ option and change the setting to _'Always'_.\r\n\r\nRun the script once then change this setting back to _'Every Week'_ or _'Every Month'_ or _'Never'_ the Externals will only change if you change the Header Details.\r\n\r\n## 7. Everything is working but how do I use the script in NUService\r\nThe script runs on two pages within NUService, the new _Incident page_ and the new _Service Request page_; it is obvious that the script is running on these pages because new web form objects are shown in the content header location.\r\n![Click to Edit ](https://raw.githubusercontent.com/ibettison/CannedAnswersImages/master/Header.PNG)\r\n### 7.1 Default Button\r\nPressing the default button, as it may suggest, fills out some of the fields with default information; which it gets from the header details file. The list of default information for a new Incident is as follows:\r\n* Raise User\r\n* Suggested Group\r\n* Impact\r\n* Urgency\r\n* Response Level\r\n* Location\r\n* Ticket Source\r\n\r\nFor a new Service Request the default Information is as follows:\r\n* Raise User\r\n* Impact\r\n* Urgency\r\n* Response Level\r\n* Location\r\n* Ticket Source\r\n\r\n_**NB: There is a requirement to press the Default button a number of times. This is because some of the drop down boxes are populated in real time depending on the values of other drop down boxes. (Press the default button 3 times with a pause in between)**_\r\n \r\n### 7.2 _Assign to me_ and _Resolve on Creation_ check-boxes\r\nThese are just toggle buttons for the check-boxes inside the form. They allow for easier selection, as you don't have to go searching the form for them.\r\n\r\n### 7.3 _Select a canned Answer_ drop down box\r\nThere are two types of canned Answers - i)**Default** and your own ii) **saved canned answers**, which I'll get onto in a minute. A canned answer contains a Summary and Description that is typed into a commonly created ticket, an example of which is the requirement for 'Guest Wireless Access' or the creation of a new user Id; the process is the same pretty much every time.\r\n\r\nSelecting any of the canned answers in the list automatically copies the summary and description into the fields but it also adds other data into the following fields for the new Incident and the new Service Request.\r\n\r\nAdding a canned answer to a new Incident also adds data to the fields:\r\n* Incident Category Level 1\r\n* Incident Category Level 2\r\n* Suggested Group\r\n\r\nAdding a canned answer to a new Service Request also adds data to the fields:\r\n* Request Type\r\n* Service Item\r\n\r\n**NB: Again as the drop-downs take time to populate with the correct data you will need to click the  _Select a canned Answer_ drop down a number of times with a slight pause between to add the information to the form drop-down fields (3 times should do it)**\r\n\r\nThese DEFAULT values are entered in the Header Details and can be changed if you want to have something different as your default canned Answers, but there is no need to as you can create your own canned answers as eluded to earlier. Let me show you!\r\n\r\n### 7.4 The _New Canned Answer^_ button\r\nClicking the button opens up a form where you can add the information needed to create a new canned answer. The script knows which page you have open and will prompt you for the information required for a new Incident or a new Service Request canned answer. Entering the details and an optional '&lt;&lt;Add Signature&gt;&gt;' variable, which uses the Header Details file to create a signature on the fly and adds it to your new canned answer, then saving the details; creates a new canned answer. This will be available every time you use NUService unless of course you delete the canned answer and I'm going to discuss this in a second.\r\n\r\n![Click to Edit ](https://raw.githubusercontent.com/ibettison/CannedAnswersImages/master/CannedAnswer.PNG)\r\n\r\n### Copying\r\n\r\nCopying entered details is possible by clicking the _'Copy'_ button. This as it suggests, copies the values in the normal form into the Canned Answers form and allows you to then save the details as described before.\r\n\r\n**NB: clicking the '_New Canned Answer_^' button again closes the form**\r\n\r\n### Deleting\r\n\r\nIf you right click the '_New Canned Answer_^' button it's function changes and displays a new button '_Delete Canned Answer^_'. Left clicking this button shows a new form allowing you to remove any canned answers you have no more use for. Select the check-box by the side of the canned answer you want to delete and it will be deleted when you press the '_Delete_' button.\r\n\r\n![Click to Edit ](https://raw.githubusercontent.com/ibettison/CannedAnswersImages/master/DeleteCannedAnswer.PNG)\r\n\r\nI hope this script is of some help to you by making it a little easier to enter tiresome tickets. Of course, if you have any suggestions or helpful advice; please tweet them to me @ibettison.\r\n\r\nMany thanks,\r\n\r\nIan. \r\n\r\n\r\n\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}